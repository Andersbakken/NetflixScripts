#!/bin/sh

GITCOMMIT=
P4COMMIT=
RESOLVE=no
MESSAGE=
TEST=

if ! which jira >/dev/null 2>&1; then
   echo "Cannot find jira commandline!"
   exit 2
fi

usage() {
  echo "Help!!"
  exit 3
}

while [ "$#" -gt 0 ]; do
   OPT="$1"
   case $OPT in
   --test|-test) TEST="echo" ;;
   --resolve|-r|-resolve) RESOLVE=yes ;;
   --message|-m) shift; MESSAGE="$1" ;;
   -p4) shift; P4COMMIT="$1" ;;
   -help) usage ;;
   *)
      if [ -z "$GITCOMMIT" ]; then
          GITCOMMIT="$1"
      elif [ -z "$P4COMMIT" ]; then
          P4COMMIT="$1"
      else
          usage
      fi ;;
   esac
   shift
done

[ -z "$GITCOMMIT" ] && GITCOMMIT=`git log --author=$(whoami) -n1 --pretty=format:"%h"`
[ -z "$GITCOMMIT" ] && GITCOMMIT="HEAD"
echo "Git: $GITCOMMIT"
[ -z "$P4COMMIT" ] && P4COMMIT=`git p4 change --git "$GITCOMMIT" 2>/dev/null | awk '{print $4}'`

DESCRIPTION=
[ -n "$P4COMMIT" ] && DESCRIPTION=`p4 describe -s $P4COMMIT | grep $'^\t' | sed "s,^\s*,,g"`
[ -z "$DESCRIPTION" ] && DESCRIPTION=`git show --quiet --pretty=format':%s' "$GITCOMMIT"`
if [ -z "$DESCRIPTION" ]; then
    echo "Description not found!"
else
    JIRA=""
    if echo "$DESCRIPTION" | grep '^\[[^ ]\+-[0-9]\+\] ' >/dev/null 2>&1; then
        JIRA=`echo "$DESCRIPTION" | sed 's,^\[\([^ ]\+-[0-9]\+\)\].*,\1,g'`
    elif echo "$DESCRIPTION" | grep '^[^ ]\+-[0-9]\+: ' >/dev/null 2>&1; then
        JIRA=`echo "$DESCRIPTION" | sed 's,^\([^ ]\+-[0-9]\+\): .*,\1,g'`
    fi

    if [ -z "$JIRA" ]; then
        echo "Unable to determine JIRA ticket!"
    else
        echo "Jira: $JIRA"
        jira cat "$JIRA"
        if [ -n "$MESSAGE" ]; then
            $TEST jira comment "$JIRA" "$MESSAGE"
        elif [ -n "$P4COMMIT" ] && ! jira comments "$JIRA" | grep $P4COMMIT >/dev/null 2>&1; then
            $TEST jira comment "$JIRA" "[Changelist: $P4COMMIT|http://perforce.netflix.com/$P4COMMIT?ac=10]"
        fi
        [ "$RESOLVE" = "yes" ] && $TEST jira resolve "$JIRA"
    fi
fi
exit 0
